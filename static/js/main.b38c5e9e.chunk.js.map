{"version":3,"sources":["Components/Header/index.jsx","Services/network.js","Components/List/index.jsx","Components/Form/index.jsx","Components/Loading/index.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Header","setIsEditing","isEditing","className","type","onClick","ENDPOINT_BASE","getItems","a","axios","get","updateItem","id","payload","put","deleteItem","delete","newItem","post","getItem","headers","List","items","setters","setItems","setCurrentDoc","setIsUpdate","setIsLoading","onEdit","data","map","header","index","item","Object","values","column","idx","name","_id","newItems","filter","onDelete","Form","currentDoc","isUpdate","quantity","price","product","client","resetStates","handleStates","reduce","acc","cur","push","toggleUpdate","ID","infos","htmlFor","defaultValue","required","defaultChecked","e","preventDefault","document","querySelector","value","active","checked","Loading","App","DEFAULT_DOC","useState","isLoading","useEffect","fetchItems","window","alert","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"2UAsBeA,EAlBA,SAAC,GAAD,IAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,UAAjB,OACb,mCACE,oBAAIC,UAAU,QAAd,uBACA,wBACEC,KAAK,SACLC,QAAS,kBAAMJ,GAAcC,IAC7BC,UAAU,oBAHZ,8B,gBCLEG,EAAgB,kEAETC,EAAQ,uCAAG,sBAAAC,EAAA,+EAAYC,IAAMC,IAAIJ,IAAtB,2CAAH,qDAERK,EAAU,uCAAG,WAAOC,EAAIC,GAAX,SAAAL,EAAA,+EACxBC,IAAMK,IAAN,UAAaR,EAAb,YAA8BM,GAAMC,IADZ,2CAAH,wDAIVE,EAAU,uCAAG,WAAOH,GAAP,SAAAJ,EAAA,+EAAcC,IAAMO,OAAN,UAAgBV,EAAhB,YAAiCM,KAA/C,2CAAH,sDAEVK,EAAO,uCAAG,WAAOJ,GAAP,SAAAL,EAAA,+EAAmBC,IAAMS,KAAKZ,EAAeO,IAA7C,2CAAH,sDAEPM,EAAO,uCAAG,WAAOP,GAAP,SAAAJ,EAAA,+EAAcC,IAAMC,IAAN,UAAaJ,EAAb,YAA8BM,KAA5C,2CAAH,sDCPdQ,G,MAAU,CAAC,KAAM,WAAY,eAAgB,YAAa,SAAU,SAAU,KAuErEC,EArEF,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QAEnBtB,EACEsB,EADFtB,aAAcuB,EACZD,EADYC,SAAUC,EACtBF,EADsBE,cAAeC,EACrCH,EADqCG,YAAaC,EAClDJ,EADkDI,aAGhDC,EAAM,uCAAG,WAAOhB,GAAP,iBAAAJ,EAAA,6DACbmB,GAAa,GADA,SAEUR,EAAQP,GAFlB,gBAELiB,EAFK,EAELA,KACRF,GAAa,GACbF,EAAcI,GACdH,GAAY,GACZzB,GAAa,GANA,2CAAH,sDAeZ,OACE,wBAAOE,UAAU,+DAAjB,UACE,gCACE,6BAEIiB,EAAQU,KAAI,SAACC,EAAQC,GAAT,OACV,6BAA0BD,GAA1B,cAAgBC,WAKxB,gCAEIV,EAAMQ,KAAI,SAACG,EAAMD,GAAP,OACR,+BAEIE,OAAOC,OAAOF,GAAMH,KAClB,SAACM,EAAQC,GAAT,OAAkB,6BAAwBD,EAAOE,MAAQF,GAAvC,cAAgBC,OAGtC,+BACE,wBACEjC,KAAK,SACLC,QAAS,kBAAMuB,EAAOK,EAAKM,MAC3BpC,UAAU,0BAHZ,oBAOC,IACD,wBACEC,KAAK,SACLC,QAAS,kBArCR,SAACO,GAChBG,EAAWH,GACX,IAAM4B,EAAWlB,EAAMmB,QAAO,qBAAGF,MAAkB3B,KACnDY,EAASgB,GAkCoBE,CAAST,EAAKM,MAC7BpC,UAAU,4BAHZ,yBAfJ,aAAe6B,a,0CC8EZW,EAnHF,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,WAAYtB,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,QAASsB,EAAe,EAAfA,SAExCC,EACEF,EADFE,SAAUC,EACRH,EADQG,MAAOC,EACfJ,EADeI,QAASC,EACxBL,EADwBK,OAAQV,EAChCK,EADgCL,IAG5Bf,EAA0BD,EAA1BC,SAAU0B,EAAgB3B,EAAhB2B,YAEZC,EAAe,SAACtC,EAASD,GAC7B,IAAM4B,EAAWlB,EAAM8B,QAAO,SAACC,EAAKC,GAGlC,OADAD,EAAIE,KAAKD,EAAIf,MAAQ3B,EAAKC,EAAUyC,GAC7BD,IACN,IAEH7B,EAASgB,GACTU,KAGIM,EAAY,uCAAG,WAAO5C,EAAIC,GAAX,qBAAAL,EAAA,0DACfqC,EADe,gCAEXlC,EAAWC,EAAIC,GAFJ,cAGjBsC,EAAatC,EAASD,GAHL,0CAM2BK,EAAQJ,GANnC,oBAMXgB,KAAa4B,EANF,EAMHlB,IAAYmB,EANT,iBAOnBlC,EAAS,GAAD,mBAAKF,GAAL,cAAciB,IAAKkB,GAAOC,MAClCR,IARmB,4CAAH,wDAyBlB,OACE,iCACE,wBAAOS,QAAQ,OAAOxD,UAAU,QAAhC,qBAEE,uBACEC,KAAK,SACLkC,KAAK,WACLsB,aAAcd,EACdlC,GAAG,OACHT,UAAU,QACV0D,UAAQ,OAGZ,wBAAOF,QAAQ,MAAMxD,UAAU,QAA/B,kBAEE,uBACEC,KAAK,SACLkC,KAAK,QACLsB,aAAcb,EACdnC,GAAG,MACHT,UAAU,QACV0D,UAAQ,OAGZ,wBAAOF,QAAQ,MAAMxD,UAAU,QAA/B,kBAEE,uBACEC,KAAK,OACLkC,KAAK,SACLsB,aAAcX,EAAOX,KACrB1B,GAAG,MACHT,UAAU,QACV0D,UAAQ,OAGZ,wBAAOF,QAAQ,OAAOxD,UAAU,QAAhC,yBAEE,uBACEC,KAAK,OACLkC,KAAK,UACLsB,aAAcZ,EAAQV,KACtB1B,GAAG,OACHT,UAAU,QACV0D,UAAQ,OAGZ,wBAAOF,QAAQ,SAASxD,UAAU,QAAlC,UACE,uBACEC,KAAK,WACLkC,KAAK,SACLwB,gBAAc,EACdlD,GAAG,SACHT,UAAU,aAEX,cAEH,wBAAQC,KAAK,SAASC,QAtEL,SAAC0D,GACpBA,EAAEC,iBAEF,IAAMnD,EAAU,GAEhBA,EAAQiC,SAAWmB,SAASC,cAAc,SAASC,MACnDtD,EAAQmC,QAAU,CAAEV,KAAM2B,SAASC,cAAc,SAASC,OAC1DtD,EAAQkC,MAAQkB,SAASC,cAAc,QAAQC,MAC/CtD,EAAQoC,OAAS,CAAEX,KAAM2B,SAASC,cAAc,QAAQC,OACxDtD,EAAQuD,OAAR,UAAoBH,SAASC,cAAc,WAAWG,SAEtDb,EAAajB,EAAK1B,IA2D6BV,UAAU,oBAAvD,kBAGC,KACD,wBAAQC,KAAK,SAASC,QAAS,kBAAM6C,KAAe/C,UAAU,mBAA9D,wBC/FSmE,G,MAXC,kBACd,qBAAKnE,UAAU,UAAf,SACE,sBAAKA,UAAU,eAAf,UACE,wBACA,wBACA,wBACA,+BCyESoE,MAxEf,WACE,IAAMC,EAAc,CAClBjC,IAAK,EACLO,SAAU,EACVE,QAAS,CAAEV,KAAM,IACjBS,MAAO,EACPE,OAAQ,CAAEX,KAAM,IAChB8B,OAAQ,QAGV,EAAkCK,oBAAS,GAA3C,mBAAOvE,EAAP,KAAkBD,EAAlB,KACA,EAA0BwE,mBAAS,IAAnC,mBAAOnD,EAAP,KAAcE,EAAd,KACA,EAAoCiD,mBAASD,GAA7C,mBAAO5B,EAAP,KAAmBnB,EAAnB,KACA,EAAgCgD,oBAAS,GAAzC,mBAAO5B,EAAP,KAAiBnB,EAAjB,KACA,EAAkC+C,oBAAS,GAA3C,mBAAOC,EAAP,KAAkB/C,EAAlB,KAEMuB,EAAc,WAClBjD,GAAa,GACbwB,EAAc+C,GACd9C,GAAY,GACZC,GAAa,IAoBf,OAjBAgD,qBAAU,WACR,IACE,IAAMC,EAAU,uCAAG,8BAAApE,EAAA,6DACjBmB,GAAa,GADI,SAEMpB,IAFN,gBAETsB,EAFS,EAETA,KACRL,EAASK,GACTF,GAAa,GAJI,2CAAH,qDAMhBiD,IACA,MAAOb,GACPb,IACAvB,GAAa,GAEbkD,OAAOC,MAAM,4CAEd,IAGD,sBAAK3E,UAAU,MAAf,UACE,cAAC,EAAD,CAAQF,aAAcA,EAAcC,UAAWA,IAC/C,sBAAKC,UAAU,eAAf,UACGD,GACC,cAAC,EAAD,CACE0C,WAAYA,EACZtB,MAAOA,EACPC,QACE,CAAEC,WAAU0B,eAEdL,SAAUA,KAGZ6B,GACA,8BACE,cAAC,EAAD,CACEpD,MAAOA,EACPC,QACE,CACEtB,eAAcuB,WAAUC,gBAAeC,cAAaC,uBAO/D+C,GAAa,cAAC,EAAD,QCjELK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFzB,SAAS0B,eAAe,SAM1BZ,M","file":"static/js/main.b38c5e9e.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './styles.css';\n\nconst Header = ({ setIsEditing, isEditing }) => (\n  <header>\n    <h1 className=\"title\">ABM Stock</h1>\n    <button\n      type=\"button\"\n      onClick={() => setIsEditing(!isEditing)}\n      className=\"button is-primary\"\n    >\n      Add new item\n    </button>\n  </header>\n);\n\nHeader.propTypes = {\n  setIsEditing: PropTypes.objectOf(PropTypes.func),\n  isEditing: PropTypes.bool,\n}.isRequired;\n\nexport default Header;\n","import axios from 'axios';\n\nconst ENDPOINT_BASE = 'https://crudcrud.com/api/fe234c30d7d841eb8357fcb5f09614b7/items';\n\nexport const getItems = async () => axios.get(ENDPOINT_BASE);\n\nexport const updateItem = async (id, payload) => (\n  axios.put(`${ENDPOINT_BASE}/${id}`, payload)\n);\n\nexport const deleteItem = async (id) => axios.delete(`${ENDPOINT_BASE}/${id}`);\n\nexport const newItem = async (payload) => axios.post(ENDPOINT_BASE, payload);\n\nexport const getItem = async (id) => axios.get(`${ENDPOINT_BASE}/${id}`);\n","/* eslint-disable no-underscore-dangle */\n/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { deleteItem, getItem } from '../../Services/network';\nimport './styles.css';\n\nconst headers = ['ID', 'Quantity', 'Product Name', 'Price ($)', 'Client', 'Active', ''];\n\nconst List = ({ items, setters }) => {\n  const {\n    setIsEditing, setItems, setCurrentDoc, setIsUpdate, setIsLoading,\n  } = setters;\n\n  const onEdit = async (id) => {\n    setIsLoading(true);\n    const { data } = await getItem(id);\n    setIsLoading(false);\n    setCurrentDoc(data);\n    setIsUpdate(true);\n    setIsEditing(true);\n  };\n\n  const onDelete = (id) => {\n    deleteItem(id);\n    const newItems = items.filter(({ _id }) => _id !== id);\n    setItems(newItems);\n  };\n\n  return (\n    <table className=\"table is-bordered is-striped table is-hoverable is-fullwidth\">\n      <thead>\n        <tr>\n          {\n            headers.map((header, index) => (\n              <th key={`head${index}`}>{header}</th>\n            ))\n          }\n        </tr>\n      </thead>\n      <tbody>\n        {\n          items.map((item, index) => (\n            <tr key={`row${index}`}>\n              {\n                Object.values(item).map(\n                  (column, idx) => (<td key={`cell${idx}`}>{column.name || column}</td>),\n                )\n              }\n              <td>\n                <button\n                  type=\"button\"\n                  onClick={() => onEdit(item._id)}\n                  className=\"button is-info is-small\"\n                >\n                  Select\n                </button>\n                {' '}\n                <button\n                  type=\"button\"\n                  onClick={() => onDelete(item._id)}\n                  className=\"button is-danger is-small\"\n                >\n                  Delete\n                </button>\n              </td>\n            </tr>\n          ))\n        }\n      </tbody>\n    </table>\n  );\n};\n\nList.propTypes = {\n  items: PropTypes.array,\n}.isRequired;\n\nexport default List;\n","/* eslint-disable object-curly-newline */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { updateItem, newItem } from '../../Services/network';\nimport './styles.css';\n\nconst Form = ({ currentDoc, items, setters, isUpdate }) => {\n  const {\n    quantity, price, product, client, _id,\n  } = currentDoc;\n\n  const { setItems, resetStates } = setters;\n\n  const handleStates = (payload, id) => {\n    const newItems = items.reduce((acc, cur) => {\n      // eslint-disable-next-line no-underscore-dangle\n      acc.push(cur._id === id ? payload : cur);\n      return acc;\n    }, []);\n\n    setItems(newItems);\n    resetStates();\n  };\n\n  const toggleUpdate = async (id, payload) => {\n    if (isUpdate) {\n      await updateItem(id, payload);\n      handleStates(payload, id);\n      return;\n    }\n    const { data: { _id: ID, ...infos } } = await newItem(payload);\n    setItems([...items, { _id: ID, ...infos }]);\n    resetStates();\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const payload = {};\n\n    payload.quantity = document.querySelector('#qnty').value;\n    payload.product = { name: document.querySelector('#prdt').value };\n    payload.price = document.querySelector('#prc').value;\n    payload.client = { name: document.querySelector('#clt').value };\n    payload.active = `${document.querySelector('#status').checked}`;\n\n    toggleUpdate(_id, payload);\n  };\n\n  return (\n    <form>\n      <label htmlFor=\"qnty\" className=\"label\">\n        Quantity\n        <input\n          type=\"number\"\n          name=\"quantity\"\n          defaultValue={quantity}\n          id=\"qnty\"\n          className=\"input\"\n          required\n        />\n      </label>\n      <label htmlFor=\"prc\" className=\"label\">\n        Price\n        <input\n          type=\"number\"\n          name=\"price\"\n          defaultValue={price}\n          id=\"prc\"\n          className=\"input\"\n          required\n        />\n      </label>\n      <label htmlFor=\"clt\" className=\"label\">\n        Cient\n        <input\n          type=\"text\"\n          name=\"client\"\n          defaultValue={client.name}\n          id=\"clt\"\n          className=\"input\"\n          required\n        />\n      </label>\n      <label htmlFor=\"prdt\" className=\"label\">\n        Product Name\n        <input\n          type=\"text\"\n          name=\"product\"\n          defaultValue={product.name}\n          id=\"prdt\"\n          className=\"input\"\n          required\n        />\n      </label>\n      <label htmlFor=\"status\" className=\"label\">\n        <input\n          type=\"checkbox\"\n          name=\"active\"\n          defaultChecked\n          id=\"status\"\n          className=\"checkbox\"\n        />\n        {'  Active'}\n      </label>\n      <button type=\"submit\" onClick={handleSubmit} className=\"button is-success\">\n        Save\n      </button>\n      {'  '}\n      <button type=\"button\" onClick={() => resetStates()} className=\"button is-danger\">\n        Cancel\n      </button>\n    </form>\n  );\n};\n\nForm.propTypes = {\n  currentDoc: PropTypes.object,\n  isUpdate: PropTypes.bool,\n}.isRequired;\n\nexport default Form;\n","import React from 'react';\nimport './styles.css';\n\nconst Loading = () => (\n  <div className=\"loading\">\n    <div className=\"lds-ellipsis\">\n      <div />\n      <div />\n      <div />\n      <div />\n    </div>\n  </div>\n);\n\nexport default Loading;\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.min.css';\n\nimport Header from './Components/Header';\nimport List from './Components/List';\nimport Form from './Components/Form';\nimport Loading from './Components/Loading';\n\nimport { getItems } from './Services/network';\n\nfunction App() {\n  const DEFAULT_DOC = {\n    _id: 0,\n    quantity: 0,\n    product: { name: '' },\n    price: 0,\n    client: { name: '' },\n    active: 'true',\n  };\n\n  const [isEditing, setIsEditing] = useState(false);\n  const [items, setItems] = useState([]);\n  const [currentDoc, setCurrentDoc] = useState(DEFAULT_DOC);\n  const [isUpdate, setIsUpdate] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const resetStates = () => {\n    setIsEditing(false);\n    setCurrentDoc(DEFAULT_DOC);\n    setIsUpdate(false);\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    try {\n      const fetchItems = async () => {\n        setIsLoading(true);\n        const { data } = await getItems();\n        setItems(data);\n        setIsLoading(false);\n      };\n      fetchItems();\n    } catch (e) {\n      resetStates();\n      setIsLoading(false);\n      // eslint-disable-next-line no-alert\n      window.alert('This endpoint is no longer available.');\n    }\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Header setIsEditing={setIsEditing} isEditing={isEditing} />\n      <div className=\"content-cntl\">\n        {isEditing && (\n          <Form\n            currentDoc={currentDoc}\n            items={items}\n            setters={\n              { setItems, resetStates }\n            }\n            isUpdate={isUpdate}\n          />\n        )}\n        {!isLoading && (\n          <div>\n            <List\n              items={items}\n              setters={\n                {\n                  setIsEditing, setItems, setCurrentDoc, setIsUpdate, setIsLoading,\n                }\n              }\n            />\n          </div>\n        )}\n      </div>\n      {isLoading && <Loading />}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}